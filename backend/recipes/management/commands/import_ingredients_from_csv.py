import csv, os, time

from django.core.management.base import BaseCommand

from recipes.models import Ingredient


class Command(BaseCommand):
    help = '–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ csv –≤ –ë–î –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã'

    def add_arguments(self, parser):
        parser.add_argument('--path', type=str)

    def handle(self, *args, **options):
        i = 0
        print('–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ë–î –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã –∏–∑ csv —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ.')
        file_path = options['path'] + 'ingredients.csv'
        with open(file_path, 'r', encoding='utf-8') as csv_file:
            reader = csv.reader(csv_file)
            for row in reader:
                i = i + 1
                try:
                    obj, created = Ingredient.objects.get_or_create(
                        name=row[0],
                        measurement_unit=row[1],
                    )
                    if not created:
                        print(
                            f'–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç {obj} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.'
                        )
                except Exception as error:
                    print(f'–û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ {row}: {error}')
        print(f'–ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ {i} —Å—Ç—Ä–æ–∫')
        print('–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ë–î –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. üëå')
